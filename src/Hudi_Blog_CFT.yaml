AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Parameters
        Parameters:
          - VPC
          - Subnet1
          - Subnet2
          - CIDRBlock
          - DBUser
          - DBPassword
          - EMRLogS3Bucket
    ParameterLabels:
      VPC:
        default: 'VPC with atleast 2 Public Subnets for EMR, RDS and DMS'
      Subnet1:
        default: 'Public Subnet for EMR, RDS and DMS - Choice1'
      Subnet2:
        default: 'Public Subnet for EMR, RDS and DMS - Choice2'
      CIDRBlock:
        default: CIDR block to open access to RDS
      DBUser:
        default: Database User - Default value is hudibloguser
      DBPassword:
        default: Database Password  - Default value is HudiBl0gusER$
      EMRLogS3Bucket:
        default: S3 Bucket for EMR Logs
Description: This CloudFormation Template spins up an environment for the Hudi CDC Blog
Parameters:
  VPC:
    Type: 'AWS::EC2::VPC::Id'
  Subnet1:
    Type: 'AWS::EC2::Subnet::Id'
  Subnet2:
    Type: 'AWS::EC2::Subnet::Id'
  CIDRBlock:
    Type: String
  DBUser:
    Type: String
    Default: hudibloguser
  DBPassword:
    Type: String
    NoEcho: 'true'
    Default: HudiBl0gusER$
  EMRLogS3Bucket:
    Type: String
Resources:
  TempS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties: {}
  GlueDB:
    Type: 'AWS::Glue::Database'
    Properties:
      CatalogId:
        Ref: 'AWS::AccountId'
      DatabaseInput:
        Description: Database for the Hudi CDC Blog
        LocationUri:
          'Fn::Join':
            - ''
            - - 's3://'
              - Ref: TempS3Bucket
              - /
        Name: hudiblogdb
  mySQLDB:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: '50'
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 1
      DBInstanceClass: db.m5.large
      DBInstanceIdentifier: hudiblog-mysql-db
      DBName: dev
      DBParameterGroupName:
        Ref: mySQLDBParameterGroup
      DBSubnetGroupName:
        Ref: mySQLsubnetgroup
      DeleteAutomatedBackups: true
      DeletionProtection: false
      EnablePerformanceInsights: false
      Engine: mysql
      EngineVersion: 5.7.22
      MasterUsername:
        Ref: DBUser
      MasterUserPassword:
        Ref: DBPassword
      MaxAllocatedStorage: 500
      MultiAZ: false
      Port: '3306'
      PubliclyAccessible: true
      StorageEncrypted: false
      StorageType: gp2
      VPCSecurityGroups:
        - Ref: mySQLSecurityGroup
  mySQLDBParameterGroup:
    Type: 'AWS::RDS::DBParameterGroup'
    Properties:
      Description: Custom Parameter Group for mySQL 5.7 Hudi Blog Source DB
      Family: mysql5.7
      Parameters:
        binlog_format: ROW
        binlog_checksum: NONE
  mySQLsubnetgroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnet Group for mySQL DB for Hudi Blog
      DBSubnetGroupName: hudiblogrdssubnetgroup
      SubnetIds:
        - Ref: Subnet1
        - Ref: Subnet2
  DMSsubnetgroup:
    Type: 'AWS::DMS::ReplicationSubnetGroup'
    Properties:
      ReplicationSubnetGroupDescription: Subnet Group for DMS for Hudi Blog
      ReplicationSubnetGroupIdentifier: hudiblogdmssubnetgroup
      SubnetIds:
        - Ref: Subnet1
        - Ref: Subnet2
  mySQLSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: hudiblogmySQLSG
      GroupDescription: Security Group for mySQL Database
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp:
            Ref: CIDRBlock
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId:
            'Fn::GetAtt':
              - DMSSecurityGroup
              - GroupId
      VpcId:
        Ref: VPC
  DMSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group for the DMS instance for Hudi Blog
      VpcId:
        Ref: VPC
  DMSSecurityGroupIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId:
        Ref: DMSSecurityGroup
      IpProtocol: tcp
      FromPort: '0'
      ToPort: '65535'
      SourceSecurityGroupId:
        Ref: DMSSecurityGroup
  DMSReplicationInstance:
    Type: 'AWS::DMS::ReplicationInstance'
    Properties:
      AllocatedStorage: 100
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      EngineVersion: 3.3.3
      MultiAZ: false
      PubliclyAccessible: true
      ReplicationInstanceClass: dms.t2.large
      ReplicationInstanceIdentifier: hudiblogdms
      ReplicationSubnetGroupIdentifier:
        Ref: DMSsubnetgroup
      VpcSecurityGroupIds:
        - Ref: DMSSecurityGroup
  DMSmySQLSourceEndpoint:
    Type: 'AWS::DMS::Endpoint'
    Properties:
      DatabaseName: dev
      EndpointIdentifier: hudiblogdmssource
      EndpointType: source
      EngineName: mysql
      Password:
        Ref: DBPassword
      Port: 3306
      ServerName:
        'Fn::GetAtt':
          - mySQLDB
          - Endpoint.Address
      Username:
        Ref: DBUser
  DMSS3Policy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - 's3:*'
            Resource:
              'Fn::Join':
                - ''
                - - 'Fn::GetAtt':
                      - TempS3Bucket
                      - Arn
                  - /*
          - Sid: VisualEditor1
            Effect: Allow
            Action:
              - 's3:*'
            Resource:
              'Fn::GetAtt':
                - TempS3Bucket
                - Arn
      ManagedPolicyName: HudiBlogDMSS3Policy
      Roles:
        - Ref: DMSS3IAMRole
  DMSS3IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: HudiBlogDMSS3IAMRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: dms.amazonaws.com
            Action: 'sts:AssumeRole'
  DMSS3TargetEndpoint:
    Type: 'AWS::DMS::Endpoint'
    Properties:
      EndpointIdentifier: hudiblogdmss3target
      EndpointType: target
      EngineName: s3
      ExtraConnectionAttributes: >-
        dataFormat=parquet;parquetTimestampInMillisecond=true;timestampColumnName=dms_received_ts;
      S3Settings:
        BucketFolder: dmsdata
        BucketName:
          Ref: TempS3Bucket
        ServiceAccessRoleArn:
          'Fn::GetAtt':
            - DMSS3IAMRole
            - Arn
  DMSReplicationTask:
    Type: 'AWS::DMS::ReplicationTask'
    Properties:
      MigrationType: full-load-and-cdc
      ReplicationInstanceArn:
        Ref: DMSReplicationInstance
      ReplicationTaskIdentifier: Hudiblogload
      SourceEndpointArn:
        Ref: DMSmySQLSourceEndpoint
      TableMappings: >-
        {"rules": [{"rule-type": "selection","rule-id": "1","rule-name":
        "1","object-locator": {"schema-name": "dev","table-name":
        "%"},"rule-action": "include","filters": []}]}
      TargetEndpointArn:
        Ref: DMSS3TargetEndpoint
  emrRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2008-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: elasticmapreduce.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole'
  emrEc2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2008-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
  EMREC2Policy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - 'cloudwatch:*'
              - 'ec2:Describe*'
              - 'elasticmapreduce:Describe*'
              - 'elasticmapreduce:ListBootstrapActions'
              - 'elasticmapreduce:ListClusters'
              - 'elasticmapreduce:ListInstanceGroups'
              - 'elasticmapreduce:ListInstances'
              - 'elasticmapreduce:ListSteps'
          - Effect: Allow
            Resource:
              - 'Fn::Join':
                  - ''
                  - - 'Fn::GetAtt':
                        - TempS3Bucket
                        - Arn
                    - /*
              - 'Fn::Join':
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: EMRLogS3Bucket
                    - /*
            Action:
              - 's3:*'
          - Effect: Allow
            Resource: 'arn:aws:s3:::aws-bigdata-blog/*'
            Action:
              - 's3:Get*'
          - Effect: Allow
            Resource: 'arn:aws:s3:::aws-bigdata-blog'
            Action:
              - 's3:ListBucket'
          - Effect: Allow
            Resource:
              'Fn::Join':
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: 'AWS::Region'
                  - .elasticmapreduce/*
            Action:
              - 's3:Get*'
          - Effect: Allow
            Resource:
              - 'Fn::GetAtt':
                  - TempS3Bucket
                  - Arn
              - 'Fn::Join':
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: EMRLogS3Bucket
            Action:
              - 's3:*'
          - Effect: Allow
            Resource:
              'Fn::Join':
                - ''
                - - 'arn:aws:glue:'
                  - Ref: 'AWS::Region'
                  - ':'
                  - Ref: 'AWS::AccountId'
                  - ':catalog'
            Action:
              - 'glue:CreateDatabase'
              - 'glue:*Table*'
              - 'glue:*Partition*'
              - 'glue:Get*'
          - Effect: Allow
            Resource:
              - 'Fn::Join':
                  - ''
                  - - 'arn:aws:glue:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':database/hudiblogdb'
              - 'Fn::Join':
                  - ''
                  - - 'arn:aws:glue:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':database/global_temp'
              - 'Fn::Join':
                  - ''
                  - - 'arn:aws:glue:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':database/default'
              - 'Fn::Join':
                  - ''
                  - - 'arn:aws:glue:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/hudiblogdb/*'
              - 'Fn::Join':
                  - ''
                  - - 'arn:aws:glue:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/default/*'
            Action:
              - 'glue:*Table*'
              - 'glue:*Partition*'
              - 'glue:*Database*'
              - 'glue:Get*'
      ManagedPolicyName: HudiBlogEMREC2Policy
      Roles:
        - Ref: emrEc2Role
  emrEc2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - Ref: emrEc2Role
  EMRCluster:
    Type: 'AWS::EMR::Cluster'
    Properties:
      Applications:
        - Name: Hadoop
        - Name: Hive
        - Name: Spark
      BootstrapActions:
        - Name: Bootstrap1
          ScriptBootstrapAction:
            Path:
              'Fn::Join':
                - ''
                - - 's3://'
                  - Ref: 'AWS::Region'
                  - .elasticmapreduce/bootstrap-actions/run-if
            Args:
              - instance.isMaster=true
              - aws
              - s3
              - cp
              - >-
                s3://aws-bigdata-blog/artifacts/hudiblog/bootstrap/hudi-blog-bootstrap.sh
              - /home/hadoop/
        - Name: Bootstrap2
          ScriptBootstrapAction:
            Path:
              'Fn::Join':
                - ''
                - - 's3://'
                  - Ref: 'AWS::Region'
                  - .elasticmapreduce/bootstrap-actions/run-if
            Args:
              - instance.isMaster=true
              - chmod
              - a+rx
              - /home/hadoop/hudi-blog-bootstrap.sh
        - Name: Bootstrap3
          ScriptBootstrapAction:
            Path:
              'Fn::Join':
                - ''
                - - 's3://'
                  - Ref: 'AWS::Region'
                  - .elasticmapreduce/bootstrap-actions/run-if
            Args:
              - instance.isMaster=true
              - /home/hadoop/hudi-blog-bootstrap.sh
              - Ref: TempS3Bucket
      Tags:
        - Key: Name
          Value: hudiblogemrcluster
      Configurations:
        - Classification: hive-site
          ConfigurationProperties:
            hive.metastore.client.factory.class: >-
              com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory
        - Classification: spark-hive-site
          ConfigurationProperties:
            hive.metastore.client.factory.class: >-
              com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory
      Instances:
        MasterInstanceGroup:
          InstanceCount: 1
          InstanceType: m5.xlarge
          Market: ON_DEMAND
          Name: Master
        CoreInstanceGroup:
          InstanceCount: 2
          InstanceType: m5.2xlarge
          Market: ON_DEMAND
          Name: CORE
        TerminationProtected: false
        Ec2SubnetId:
          Ref: Subnet1
      JobFlowRole:
        Ref: emrEc2InstanceProfile
      Name: hudiblogemrcluster
      ReleaseLabel: emr-5.30.0
      ServiceRole:
        Ref: emrRole
      VisibleToAllUsers: true
      LogUri:
        'Fn::Join':
          - ''
          - - 's3://'
            - Ref: EMRLogS3Bucket
            - /HudiBlogEMRLogs/
Outputs:
  DataLakeS3Bucket:
    Description: Data Lake S3 bucket created by the stack
    Value:
      Ref: TempS3Bucket
  mySQLDatabaseEndpoint:
    Description: EndPoint for the RDS mySQL database
    Value:
      'Fn::GetAtt':
        - mySQLDB
        - Endpoint.Address
  mySQLDatabasePort:
    Description: Port for the RDS mySQL database
    Value: '3306'
  EMRClusterMasterNodeDNS:
    Description: DNS for the master node of the EMR cluster
    Value:
      'Fn::GetAtt':
        - EMRCluster
        - MasterPublicDNS
